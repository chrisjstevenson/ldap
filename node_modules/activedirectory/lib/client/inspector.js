var _ = require('underscore');

// Precompile some common, frequently used regular expressions.
var re = {
  'isUserResult': /CN=Person,CN=Schema,CN=Configuration,.*/i,
  'isGroupResult': /CN=Group,CN=Schema,CN=Configuration,.*/i
};

module.exports = {
  /**
   * Checks to see if the LDAP result describes a group entry.
   *
   * @param {Object} item The LDAP result to inspect.
   * @returns {Boolean}
   */
  isGroupResult: function isGroupResult(item) {
    if (! item) return(false);
    if (item.groupType) return(true);
    if (item.objectCategory) {
      return(re.isGroupResult.test(item.objectCategory));
    }
    if ((item.objectClass) && (item.objectClass.length > 0)) {
      return(_.any(item.objectClass, function(c) { return(c.toLowerCase() === 'group'); }));
    }
    return(false);
  },

  /**
   * Checks to see if the LDAP result describes a user entry.
   *
   * @param {Object} item The LDAP result to inspect.
   * @returns {Boolean}
   */
  isUserResult: function isUserResult(item) {
    if (! item) return(false);
    if (item.userPrincipalName) return(true);
    if (item.sAMAccountName) return(true);
    if (item.objectCategory) {
      return(re.isUserResult.test(item.objectCategory));
    }
    if ((item.objectClass) && (item.objectClass.length > 0)) {
      return(_.any(item.objectClass, function(c) { return(c.toLowerCase() === 'user'); }));
    }
    return(false);
  }
};

// Precompile some common, frequently used regular expressions.
var re = {
  'isDistinguishedName': /(([^=]+=.+),?)+/gi
};

module.exports = {
  /**
   * Checks to see if the value is a distinguished name.
   *
   * @param {String} value The value to check to see if it's a distinguished name.
   * @returns {Boolean}
   */
  isDistinguishedName: function isDistinguishedName(value) {
    if ((! value) || (value.length === 0)) return(false);
    return(re.isDistinguishedName.test(value));
  },

  /**
   * Parses the distinguishedName (dn) to remove any invalid characters or to
   * properly escape the request.
   *
   * @param dn {String} The dn to parse.
   * @returns {String}
   */
  parseDistinguishedName: function parseDistinguishedName(dn) {
    if (! dn) return(dn);

    // Currently a bug in ldapjs that isn't properly escaping DNs with ','
    // in the name.
    return(dn.replace('\\,', '\\\\,'));
  }
};

